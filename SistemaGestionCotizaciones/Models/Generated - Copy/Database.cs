



















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `falabellaDesarrollo`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `data source=aldebaran;Initial Catalog=Falabella_qa3;user=sa;password=atech123*`
//     Schema:                 ``
//     Include Views:          `False`


		
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace SistemaGestionCotizaciones.Models
{

	public partial class falabellaDesarrolloDB : Database
	{
		public falabellaDesarrolloDB() 
			: base("falabellaDesarrollo")
		{
			CommonConstruct();
		}

		public falabellaDesarrolloDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			falabellaDesarrolloDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static falabellaDesarrolloDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new falabellaDesarrolloDB();
        }

		[ThreadStatic] static falabellaDesarrolloDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static falabellaDesarrolloDB repo { get { return falabellaDesarrolloDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



	[TableName("SecAccion")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    public partial class SecAccion : falabellaDesarrolloDB.Record<SecAccion>  
    {



		[Column("id")] public int Id { get; set; }





		[Column("codigo")] public string Codigo { get; set; }





		[Column("nombre")] public string Nombre { get; set; }





		[Column("descripcion")] public string Descripcion { get; set; }





		[Column("prioridad")] public short Prioridad { get; set; }





		[Column("activo")] public bool Activo { get; set; }



	}

	[TableName("SecAplicacion")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    public partial class SecAplicacion : falabellaDesarrolloDB.Record<SecAplicacion>  
    {



		[Column("id")] public int Id { get; set; }





		[Column("codigo")] public string Codigo { get; set; }





		[Column("nombre")] public string Nombre { get; set; }





		[Column("descripcion")] public string Descripcion { get; set; }





		[Column("pagcontroller")] public string Pagcontroller { get; set; }





		[Column("pagaction")] public string Pagaction { get; set; }





		[Column("url")] public string Url { get; set; }





		[Column("activo")] public bool Activo { get; set; }



	}

	[TableName("SecRol")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    public partial class SecRol : falabellaDesarrolloDB.Record<SecRol>  
    {



		[Column("id")] public int Id { get; set; }





		[Column("codigo")] public string Codigo { get; set; }





		[Column("nombre")] public string Nombre { get; set; }





		[Column("descripcion")] public string Descripcion { get; set; }





		[Column("activo")] public bool Activo { get; set; }



	}

	[TableName("SecRolUsuario")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    public partial class SecRolUsuario : falabellaDesarrolloDB.Record<SecRolUsuario>  
    {



		[Column("id")] public int Id { get; set; }





		[Column("idsecusuario")] public int Idsecusuario { get; set; }





		[Column("idsecrol")] public int Idsecrol { get; set; }



	}

	[TableName("SecRolGrupoPerfil")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    public partial class SecPermiso : falabellaDesarrolloDB.Record<SecPermiso>  
    {



		[Column("id")] public int Id { get; set; }





		[Column("idsecrol")] public int Idsecrol { get; set; }





		[Column("idsecaplicacion")] public int Idsecaplicacion { get; set; }





		[Column("idsecaccion")] public int Idsecaccion { get; set; }





		[Column("activo")] public bool Activo { get; set; }



	}

	[TableName("SecUsuario")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    public partial class SecUsuario : falabellaDesarrolloDB.Record<SecUsuario>  
    {



		[Column("id")] public int Id { get; set; }





		[Column("username")] public string Username { get; set; }





		[Column("displayname")] public string Displayname { get; set; }





		[Column("email")] public string Email { get; set; }





		[Column("lastlogin")] public DateTime? Lastlogin { get; set; }





		[Column("activo")] public bool Activo { get; set; }



	}


}



@model SistemaGestionCotizaciones.Models.DetalleMantenedor
@using System.Data;
@using System.Web.Script.Serialization;

<link href="~/Content/css/mantenedorDetalle.css" rel="stylesheet" />
<script src="~/Scripts/Blob.js"></script>

<style>
    .glyp-amarillo {
        color: #EDCF57;
    }
</style>
@if (Model.dtHeaders.Rows.Count > 0 && Model.dtTipodato.Rows.Count > 0)
{

    <script>
    ///scrip botones aciones
    var idHead;
    var ascDesc;
    var ascDescAct;
    var URLjs = ' @Html.Raw(Url.Action("jsonListaElementos", "Mantenedor"))';
    var Json = [];
    var editando= false;
    var plantillas;
    var listaplantillas;

    $(document).ready(function () {


        function b64toBlob(b64Data, contentType, sliceSize) {
            contentType = contentType || '';
            sliceSize = sliceSize || 512;
            var byteCharacters = atob(b64Data);
            var byteArrays = [];
            for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
                var slice = byteCharacters.slice(offset, offset + sliceSize);
                var byteNumbers = new Array(slice.length);
                for (var i = 0; i < slice.length; i++) {
                    byteNumbers[i] = slice.charCodeAt(i);
                }
                var byteArray = new Uint8Array(byteNumbers);
                byteArrays.push(byteArray);
            }
            var blob = new Blob(byteArrays, { type: contentType });
            return blob;
        }

        $('.btnGuardar').hide();
        $('.btnCancelar').hide();

        var bkpString = new String("");;// string para guardar los datos recividos antes de editar
        $('.btnEditar').click(function () { //al presionar el boton editar
            $('.btnEditar').prop("disabled", true);
            $('.btnEliminar').prop("disabled", true);
            var idFila = $(this).attr("id");
            editando= true;
            $("#fila_" + idFila + ".tr").addClass("warning");
            $.ajax({
                dataType: "json",
                url: URLjs,
                async: false,
            }).done(function (varJson) {
                //mi codigo
                // console.log(JSON.stringify(varJson));
                Json = varJson;

            });
            //alert("sorpresa #0= " + bkpString);
            //bkpSring contiene = id +tipoDAto + Nombre +descripcion + categoria
            // ////console.log("tipodato: "+$("#tipoDato_" + idFila ).val(););
            // ////console.log("categoria: "+$("#categoria_" + idFila ).val());
            bkpString="";
            bkpString += $("#fila_" + idFila + " label").text() + ";" +
                $("#tipoDato_" + idFila ).val() + ";" +
                $("#nombre_" + idFila).val() + ";" +
                $("#descripcion_" + idFila).val() + ";" +
                $("#categoria_" + idFila ).val();
            //alert("sorpresa= " + bkpString);
            //  ////console.log(bkpString);
            $("#fila_" + idFila + " select").removeClass("selectToLabel").attr("disabled", false);// activa el comboBox de la fila que se quiere editar
            $("#fila_" + idFila + " input").removeClass("TextBoxAsLabel").attr("readonly", false); //quita la clase y el atributo readonly
            $("#fila_" + idFila + " .combobox").attr("readonly", false); //quita la clase y el atributo readonly
            $("#fila_" + idFila + " .btnGuardar").show();    //muestra boton guadar
            $("#fila_" + idFila + " .btnCancelar").show();   //muestra boton cancelar
            $("#fila_" + idFila + " .btnEditar").hide();     //oculta btn edit
            $("#fila_" + idFila + " .btnEliminar").hide();   //oculta btn eliminar
        });

        $('.btnCancelar').click(function () {
            $('.btnEditar').show();
            var idFila = $(this).attr("id");
            //alert(idFila);
            var elementos = bkpString.split(";"); // separa los datos
            // ////console.log(elementos[0] + elementos[1] + elementos[2] + elementos[3]+ elementos[4]);
            //console.log(elementos[1]);
            $("#fila_" + idFila + " label").text(elementos[0]);                      //restaura los valores previos
            $("#tipoDato_"+ idFila).val(elementos[1]);                      //restaura los valores previos
            $("#nombre_" + idFila).val(elementos[2]);                                //restaura los valores previos
            $("#descripcion_" + idFila).val(elementos[3]);
            $("#categoria"+idFila).val(elementos[4]);//restaura los valores previos

            $("#fila_" + idFila + " select").addClass("selectToLabel").attr("disabled", true);// deshabilita el comboBox de la fila editada
            $("#fila_" + idFila + " input").addClass("TextBoxAsLabel").attr("readonly", true); //agrega la clase y el atributo readonly
            $("#fila_" + idFila + " .btnGuardar").hide(); //oculta boton guadar
            $("#fila_" + idFila + " .btnCancelar").hide();//oculta boton cancelar
            $("#fila_" + idFila + " .btnEditar").show();  //muestra btn edit
            $("#fila_" + idFila + " .btnEliminar").show();//muesta btn eliminar
            if ($('.tr').children().hasClass('has-error')) {
                $('.tr .control-label').remove();
                $('.tr label .has-error').removeClass('has-error');
            }
            bkpString = "";
            $("#fila_" + idFila + ".tr").removeClass("warning");
            $('.btnEditar').prop("disabled", false);
            editando= false;
        });

        $('.btnGuardar').click(function () {

            var idFila = $(this).attr("id");
            //alert(idFila);
            var existe = false;
            var id;
            //console.log(' alo'+JSON.stringify(Json));
            //console.log( '  ' + $("#nombre_" + idFila).val().toLowerCase());
            _.each(Json, function (i) {

                var nombre = i.idCatalogoElemento;
                //console.log(nombre.toLowerCase() + '  ' + $("#nombre_" + idFila).val().toLowerCase());
                if (nombre.toLowerCase() == $("#nombre_" + idFila).val().toLowerCase()) {
                    existe = true;
                    id= i.Idformula;
                }
            });
            if (existe && id != idFila) {
                alert('El nombre que intenta ingresar, no esta disponible, intente con otro nombre.');
                return;
            }
            var datos = new String("");
            if ($("#nombre_" + idFila).val().trim().length > 0 && $("#descripcion_" + idFila).val().trim().length > 0
                &&  !$('.tr').children().hasClass('has-error') && $("#tipoDato_" + idFila ).val() != 0 &&  $("#categoria_" + idFila ).val() != 0 && !$('.tr').children().hasClass('has-error')) {
                //alert('if');
                datos="";
                //  ////console.log("categoria: "+$("#categoria_" + idFila ).val());
                // alert($("#tipoDato_" + idFila ).val());
                datos += $("#tipoDato_" + idFila ).val() + ";" +    //se guardan los cambios
                         $("#nombre_" + idFila).val() + ";" +
                         $("#descripcion_" + idFila).val()+";" +
                         $("#categoria_" + idFila ).val();                          //se guardan los cambios
                //console.log(datos);
                // lo envio por post a el controlador :O
                var URL = '@Url.Action("actualizarComponenteElemento", "Mantenedor", new { id = "idR", cadena = "cadenaR" })';

                URL = URL.replace('idR', idFila);
                URL = URL.replace('cadenaR', datos);
                //alert(datos);
                //alert(URL);
                msg = "Se actualizaran los datos del catalogo  "+$("#nombre_" + idFila).val() +",¿Desea continuar?";
                var titulo = 'Advertencia';
                var iconClass = 'glyphicon glyphicon-exclamation-sign';
                //alert(msg);
                //dialogConfirmar('dialog', titulo, msg, iconClass, URL);
                $.ajax({
                    type: "POST",
                    url: URL,
                }).done(function (resp) {
                    resultado = resp;
                });
                $("#fila_" + idFila + " input").addClass("TextBoxAsLabel").attr("readonly", true); //agrega la clase y el atributo readonly
                $("select").addClass('selectToLabel').attr("disabled", true);//deja todos los comboBox desactivados
                $("#fila_" + idFila + " .btnGuardar").hide();    //oculta boton guadar
                $("#fila_" + idFila + " .btnCancelar").hide();   //oculta boton cancelar
                $("#fila_" + idFila + " .btnEditar").show();     //muestra btn edit
                $("#fila_" + idFila + " .btnEliminar").show();   //muesta btn eliminar
                $("#fila_" + idFila + ".tr").removeClass("warning");
                $('.btnEditar').show().prop("disabled", false);
                $('.btnGuardar').hide();
                $('.btnCancelar').hide();
                editando= false;
            }
            else {
                // alert('else');
                if ($('.tr').children().hasClass('has-error')) {
                    $('.tr').children('.has-error').focus();
                }
                if ($("#nombre_" + idFila).val().trim().length == 0) {
                    alert('Debe ingresar un nombre');
                    $("#nombre_" + idFila).focus();
                }
                if ($("#descripcion_" + idFila).val().trim().length == 0) {
                    alert('Debe ingresar una descripción');
                    $("#descripcion_" + idFila).focus();
                }
                if ($("#fila_" + idFila + " select").val() = "0") {
                    alert('Debe selecionar un tipo de dato');
                    $("#fila_" + idFila + " select").focus();
                }
            }

        });

        $('.btnEliminar').click(function () {

            var heading = 'Atención.';
            var question = '<span class="glyphicon glyphicon-warning-sign glyp-amarillo"></span>&nbsp;&nbsp;Está a punto de eliminar un Elemento, ¿Desea continuar?.';
            var cancelButtonTxt = 'Cancelar';
            var okButtonTxt = 'Aceptar';

            url = '@Html.Raw(Url.Action("eliminarComponenteElemento", "Mantenedor", new { id = "reemplazo"}))'

            url = url.replace("reemplazo", $(this).attr('id'));

            var callback = function() {


                $.ajax({
                    type: 'POST',
                    url: url,
                    dataType: "html",
                    async: false,
                    success: function (data) {
                        plantillas = jQuery.parseJSON(data);
                    }
                });

                //listaplantillas = '<h5>El elemento se encuentra relacionado con las siguientes plantillas</h5>';
                listaplantillas = '<div class="panel panel-warning">\
                                        <div class="panel-heading">El elemento se encuentra relacionado con las siguientes <span class="badge">' + plantillas.length + '</span> plantillas</div>\
                                        <div class="panel-body">\
                                            <table id="tblRelacionados" class="table table-responsive table-condensed table-hover table-striped">\
                                                <thead><tr><th>#</th><th>Plantilla</th><tr>\
                                                <tbody>';

                _.each(plantillas, function(i, index){

                    listaplantillas += '<tr>\
                                            <td>' + (index + 1) + '</td>\
                                            <td>' + i.Nombre + '</td>\
                                        </tr>';

                });
                listaplantillas += '        <tbody>\
                                            </table>\
                                        </div>\
                                    </div>';
                if(JSON.stringify(plantillas) != '[]') {

                    $('#contPlantillas').html(listaplantillas);

                    $('#modPlantillas')
                        .prop('class', 'modal fade')
                        .addClass('right')
                        .modal({
                            backdrop: 'static',
                            keyboard: false
                        });
                    $('#modPlantillas').modal('show');

                    $('.modal-body').css({
                        height: '400px',
                        'overflow-y': 'auto'
                    });

                } else {

                    var heading = 'Acción Exitosa';
                    var question = '<span class="glyphicon glyphicon-check text-success"></span> El elemento se ha eliminado correctamente.';
                    var cancelButtonTxt = '0';
                    var okButtonTxt = 'OK';
                    var callback = function () {
                        location.reload();
                    };
                    confirm(heading, question, cancelButtonTxt, okButtonTxt, callback);
                }

            };

            confirm(heading, question, cancelButtonTxt, okButtonTxt, callback);

        });

        ////------------------------------------------------------paginacion--------------------------------------------------------////
        //idHead, ascDesc


        @if (ViewBag.ascDescAct == "a")
            {
                @:$('<span class="glyphicon glyphicon-arrow-up" style="cursor: default;" aria-hidden="true"></span>').appendTo($('#tblListarHeader thead tr [ide = @ViewBag.idHeadAct]'));
                                    }

        @if (ViewBag.ascDescAct == "d")
            {
                @:$('<span class="glyphicon glyphicon-arrow-down" style="cursor: default;" aria-hidden="true"></span>').appendTo($('#tblListarHeader thead tr [ide = @ViewBag.idHeadAct]'));
                                    }

        $("#tblListarHeader thead tr th").click(function () {

            idHead = $(this).attr("ide");
            ascDesc = 'a';
            ascDescAct = '@ViewBag.ascDescAct';

            if(editando == false)
            {

                if (ascDesc == 'a' && ascDescAct == 'a'  ) {
                    cargarPagina(parseInt($('#txt_pag').val()-1), idHead, 'd');

                } else {
                    if (ascDescAct == 'd') {
                        cargarPagina(parseInt($('#txt_pag').val()-1), idHead, 'a');
                    } else {
                        cargarPagina(parseInt($('#txt_pag').val()-1), idHead, 'a');
                    }
                }
            }

        });

        var tPagina;


        tPagina = @Model.dtHeaders.Rows[0][5];

        var pagActual = 0;
        function cargarPagina(id,idHead, ascDesc) {
            //alert(idHead +' '+ ascDesc);
            var url = '@Html.Raw(Url.Action("vpGrillaDetalleCatalogoElemento", "Mantenedor", new { id = "param-id", ordenarPor = "param-name", ascDesc="param-ascDesc" }))';
            url = url.replace("param-id", id)
                     .replace("param-name", idHead)
                     .replace("param-ascDesc", ascDesc);
            $('#tb_Header').load(url);
        }

        $('.solo-numero').keypress(function (e) {
            if (!(e.which == '8' || e.which == '48' || e.which == '49' || e.which == '50' || e.which == '51' || e.which == '52' ||
                 e.which == '53' || e.which == '54' || e.which == '55' || e.which == '56' || e.which == '57')) {
                return false;
            }
        });

        $('#txt_pag').keypress(function (e) {
            var key = e.which;
            if (key == 13) {
                var valor = parseInt($(this).val() -1);

                ////console.log(valor + ' ' + parseInt($('#ttl_pag').text()));
                if (valor >= 0 && valor <= parseInt(tPagina - 1)) {
                    cargarPagina(valor,idHead,ascDescAct);
                }
            }
        });
        $('#txt_pag').focus(function () {
            pagActual = $.trim($(this).val());
            $(this).val($.trim($(this).val()));
        });
        $('#txt_pag').focusout(function () {
            $(this).val(pagActual);
        });
        //////validacion
        $('#btn_pag_sig').click(function () {
            pagina = parseInt($('#txt_pag').val());
            if (pagina < parseInt(tPagina)) {
                pagina--;
                cargarPagina(pagina + 1,idHead,ascDescAct);
            }
        });
        $('#btn_ult_pag').click(function () {
            cargarPagina(tPagina - 1,idHead,ascDescAct);
        });

        $('#btn_pri_pag').click(function () {

            cargarPagina("0",idHead,ascDescAct);
        });
        $('#btn_pag_ant').click(function () {

            if (parseInt(($('#txt_pag').val())) == 1) {

            } else {

                if (parseInt($('#txt_pag').val()) > parseInt(tPagina)) {
                    pagina = parseInt(tPagina);

                } else {
                    pagina = (parseInt($('#txt_pag').val()));
                    pagina -= 2;
                }
                cargarPagina(pagina,idHead,ascDescAct);

            }
        });

        $('#btn_nvo_cElmt').click(function () {
            //cambia el titulo <h4> de clase modal_title segun la vista parcial a mostrar
            $('h4.modal-title').text('Nuevo Elemento');
            $('#modCustom')
                .prop('class', 'modal fade')
                .addClass('right')
                .modal({
                    backdrop: 'static',
                    keyboard: false
                });
            $('#modCustom').modal('show');
            $(':input, a').attr('tabindex', '-1');
            $('#nvo_header').load('vpAgregarCatalogoElemento');
        });

        $(function () {
            $("#tabs").tabs();
        });

        $('#btn_descargar').click(function () {
            
            $.ajax({
                url: '@Html.Raw(Url.Action("ElementoFileXls", "Mantenedor"))',
                type: 'POST',
                async: false,
                success: function (data) {

                    var blob = b64toBlob(data, "application/vnd.ms-excel;");
                    saveAs(blob, "ListadoElementos.csv");

                }
            });

        });

    });
    </script>
    <div class="container">
    <div class="row">
        <table id="tblListarHeader" class="table table-responsive table-condensed table-hover table-striped ">
            <thead>
                <tr>
                    <th ide="1" class="col-md-1">ID</th>
                    <th ide="3" class="col-md-2">Elemento</th>
                    <th ide="4" class="col-md-5">Descripción</th>
                    <th ide="2" class="col-md-1">Tipo dato</th>
                    <th ide="5" class="col-md-1">Categoría</th>
                    <th  class="col-md-1">Acción</th>
                </tr>
            </thead>
            <tbody>

                @foreach (DataRow col in Model.dtHeaders.Rows)
            {
                <tr id="fila_@col.ItemArray.GetValue(0)" class="tr">
                    <td><label class="TextBoxAsLabel">@col.ItemArray.GetValue(0)</label></td>
                    <td><input id="nombre_@col.ItemArray.GetValue(0)" value="@col.ItemArray.GetValue(2)" class="TextBoxAsLabel caracter-250" readonly /></td>
                    <td><input id="descripcion_@col.ItemArray.GetValue(0)" value="@col.ItemArray.GetValue(3)" class="TextBoxAsLabel caracter-250 " readonly /></td>
                    <td>
                        @*si el tipodato es lista, muestra solo ese tipo de dato en el combo*@
                        <select id="tipoDato_@col.ItemArray.GetValue(0)" class="combobox selectToLabel" disabled="disabled">
                            <option value="0">Seleccione un tipo de dato</option>

                            @if (col.ItemArray.GetValue(1).ToString().AsInt() == 3)
                            {
                                <option selected class="TextBoxAsLabel" value="@col.ItemArray.GetValue(1)">Lista</option>

                            }
                            else
                            {
                                foreach (DataRow colCb in Model.dtTipodato.Rows)
                                {


                                    if (col.ItemArray.GetValue(1).ToString() == colCb.ItemArray.GetValue(0).ToString())
                                    {
                                        <option selected class="TextBoxAsLabel" value="@colCb.ItemArray.GetValue(0)">@colCb.ItemArray.GetValue(1)</option>

                                    }
                                    else
                                    {
                                        <option class="TextBoxAsLabel" value="@colCb.ItemArray.GetValue(0)">@colCb.ItemArray.GetValue(1)</option>
                                    }

                                }
                            }
                        </select>
                    </td>
                    <td>
                        @if (col.ItemArray.GetValue(4).ToString() == "1")
                        {
                            <select id="categoria_@col.ItemArray.GetValue(0)" class="combobox selectToLabel" disabled="disabled">
                                <option @if (col.ItemArray.GetValue(4).ToString() == "1") { string select = "selected"; @select        } value="1">Variable del Sistema</option>
                            </select>
                        }
                        else
                        {
                            <select id="categoria_@col.ItemArray.GetValue(0)" class="combobox selectToLabel" disabled="disabled"> 
                                <option  value="0">Seleccione una categoría</option>                                
                                <option @if (col.ItemArray.GetValue(4).ToString() == "2") { string select = "selected"; @select       } value="2">Variables</option>                               
                                <option @if (col.ItemArray.GetValue(4).ToString() == "4") { string select = "selected"; @select       } value="4">Configuración</option>
                            </select>
                        }
                    </td>
                    <td>
                        <div class="btn-group btn-group-xs" role="group" style="display:inline-block;">
                            <button id="@col.ItemArray.GetValue(0)" type="button" class="btnGuardar" title="Guardar" hidden style="border:none;background-color:transparent;"><span class="glyphicon glyphicon-ok"></span></button>
                            <button id="@col.ItemArray.GetValue(0)" type="button" class="btnCancelar" title="Cancelar" hidden style="border:none;background-color:transparent;"><span class="glyphicon glyphicon-remove"></span></button>
                            @if (!User.IsInRole("OBSERVADOR"))
                            {
                            <button id="@col.ItemArray.GetValue(0)" type="button" class="btnEditar" title="Editar" style="border:none;background-color:transparent;"><span class="glyphicon glyphicon-pencil"></span></button>
                            <button id="@col.ItemArray.GetValue(0)" type="button" class="btnEliminar" title="Eliminar" style="border:none;background-color:transparent;"><span class="glyphicon glyphicon-trash"></span></button>
                            }
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
      </div> 
     <div class="row pagination col-md-12 col-sm-12   " style="background-color:#F9F9F9;height:28px;">
            <div class=" form-inline " role="form">
                <div class="col-md-2 col-sm-2 col-md-offset-1 col-sm-offset-1">
                    <p class="control-label">Total de Registros @Model.dtHeaders.Rows[0][6]</p>
                </div>
                <div class="col-md-2 col-sm-3 col-md-offset-2 col-sm-offset-2 form-inline">
                    <p class="control-label ">
                        Ir a
                        <input id="txt_pag" type="text" class="input-xs form-control solo-numero " style="width:25px" value="@(int.Parse(Model.dtHeaders.Rows[0][7].ToString())+1) " />
                        de @Model.dtHeaders.Rows[0][5] Pág.
                    </p>
                </div>
                <!-- /.btn-toolbar -->
                <div class="col-md-offset-9 col-sm-offset-9">
                    <div id="btn_Func_Tools" class="" role="toolbar">
                        @if (!User.IsInRole("OBSERVADOR"))
                        {
                        <div class="btn-group btn-group-sm" role="group">
                            <button id="btn_descargar" type="button" class="btn btn-default" title="Nuevo Elemento" style="border:none;background-color:transparent;"><span class="glyphicon glyphicon-download"></span></button>
                            <button id="btn_nvo_cElmt" type="button" class="btn btn-default" title="Nuevo Elemento" style="border:none;background-color:transparent;"><span class="glyphicon glyphicon-plus"></span></button>
                        </div>
                        }
                        <div class="btn-group btn-group-sm" role="group">                            
                            <button id="btn_pri_pag" type="button" class="btn btn-default" title="Primera Página" style="border:none;background-color:#F9F9F9;"><span class="glyphicon glyphicon-step-backward"></span></button>
                            <button id="btn_pag_ant" type="button" class="btn btn-default" title="Página Anterior" style="border:none;background-color:#F9F9F9;"><span class="glyphicon glyphicon-triangle-left"></span></button>
                            <button id="btn_pag_sig" type="button" class="btn btn-default" title="Página Siguiente" style="border:none;background-color:#F9F9F9;"><span class="glyphicon glyphicon-triangle-right"></span></button>
                            <button id="btn_ult_pag" type="button" class="btn btn-default" title="Última Página" style="border:none;background-color:#F9F9F9;"><span class="glyphicon glyphicon-step-forward"></span></button>
                        </div>
                    </div>
                </div>
                <!-- /.btn-toolbar -->
            </div>
        </div>
        <div id="dialog" title="¿Desea continuar?">
        </div>

        <!-- /.modal -->
        <div class="modal fade" id="modPlantillas">
            <div class="modal-dialog" id="modDialog">
                <div class="modal-content">
                    <div class="modal-header ttl_modal">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                        <h4 class="text-warning">No es posible eliminar.</h4>
                    </div>
                    <div id="contPlantillas" class="modal-body"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.modal -->

}
else
{

        <div class="container">
            <div class="row">
                <div class="alert alert-warning" role="alert">
                    <strong>Alerta!</strong> No hay Elementos creados <a id="btn_nuevo" href="#" data-toggle="modal" data-target="" class="alert-link"> Crear un Elementos</a>.
                </div>
            </div>
        </div>
        <script>
            $('#btn_nuevo').click(function () {
                //cambia el titulo <h4> de clase modal_title segun la vista parcial a mostrar
                $('h4.modal-title').text('Nuevo Elemento');
                $('.modal')
                    .prop('class', 'modal fade')
                    .addClass('right')
                    .modal({
                        backdrop: 'static',
                        keyboard: false
                    });
                $('.modal').modal('show');
                $(':input, a').attr('tabindex', '-1');
                $('#nvo_header').load('vpAgregarCatalogoElemento');
            });
            $(function () {
                $("#tabs").tabs();
            });
            error('@ViewBag.Error');
        </script>
        }

